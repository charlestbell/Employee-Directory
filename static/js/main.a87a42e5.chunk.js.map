{"version":3,"sources":["utils/API.js","components/Table/index.js","components/FilterBy/index.js","App.js","reportWebVitals.js","index.js"],"names":["query","axios","get","Table","props","style","width","data-column","onClick","sortBy","users","map","item","index","name","first","last","email","location","country","city","FilterBy","className","type","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","data-filter","handleFilterChange","placeholder","filterColumn","onChange","handleInputChange","filterBy","App","useState","setUsers","setError","filter","setFilter","setFilterColumn","useEffect","API","then","res","data","results","catch","err","error","message","event","localUsers","preventDefault","user","target","value","dataset","column","sort","a","b","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a87a42e5.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the GitHub Jobs API\n\nexport default {\n  getUsers: function (query) {\n    return axios.get(\"https://randomuser.me/api/?results=30\");\n  },\n};\n// ?format=json\n","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction Table(props) {\r\n  return (\r\n    <table style={{ width: \"100%\" }}>\r\n      <thead>\r\n        <tr>\r\n          <th data-column=\"firstName\" onClick={props.sortBy}>\r\n            Firstname\r\n          </th>\r\n          <th data-column=\"lastName\" onClick={props.sortBy}>\r\n            Lastname\r\n          </th>\r\n          <th data-column=\"email\" onClick={props.sortBy}>\r\n            Email\r\n          </th>\r\n          <th data-column=\"country\" onClick={props.sortBy}>\r\n            Country\r\n          </th>\r\n          <th data-column=\"city\" onClick={props.sortBy}>\r\n            City\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.users.map((item, index) => (\r\n          <tr key={index}>\r\n            <td>{item.name.first}</td>\r\n            <td>{item.name.last}</td>\r\n            <td>{item.email}</td>\r\n            <td>{item.location.country}</td>\r\n            <td>{item.location.city}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nfunction FilterBy(props) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <div className=\"dropdown mb-1\">\r\n          <button\r\n            className=\"btn btn-secondary dropdown-toggle\"\r\n            type=\"button\"\r\n            id=\"dropdownMenuButton\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Filter By\r\n          </button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            <a\r\n              className=\"dropdown-item\"\r\n              href=\"#\"\r\n              data-filter=\"first name\"\r\n              onClick={props.handleFilterChange}\r\n            >\r\n              First Name\r\n            </a>\r\n            <a\r\n              className=\"dropdown-item\"\r\n              href=\"#\"\r\n              data-filter=\"last name\"\r\n              onClick={props.handleFilterChange}\r\n            >\r\n              Last Name\r\n            </a>\r\n            <a\r\n              className=\"dropdown-item\"\r\n              href=\"#\"\r\n              data-filter=\"email\"\r\n              onClick={props.handleFilterChange}\r\n            >\r\n              Email\r\n            </a>\r\n            <a\r\n              className=\"dropdown-item\"\r\n              href=\"#\"\r\n              data-filter=\"country\"\r\n              onClick={props.handleFilterChange}\r\n            >\r\n              Country\r\n            </a>\r\n            <a\r\n              className=\"dropdown-item\"\r\n              href=\"#\"\r\n              data-filter=\"city\"\r\n              onClick={props.handleFilterChange}\r\n            >\r\n              City\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder={\"Enter \" + props.filterColumn}\r\n          onChange={props.handleInputChange}\r\n        ></input>\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-light mx-1\"\r\n        onClick={props.filterBy}\r\n      >\r\n        Filter\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nexport default FilterBy;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport API from \"./utils/API\";\nimport \"./components/Table\";\nimport Table from \"./components/Table\";\nimport FilterBy from \"./components/FilterBy\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState({});\n  const [filter, setFilter] = useState(\"\");\n  const [filterColumn, setFilterColumn] = useState(\"first name\");\n\n  // Get users to populate the page\n  useEffect(() => {\n    API.getUsers()\n      .then((res) => {\n        setUsers(res.data.results);\n      })\n      .catch((err) => setError({ error: err.message }));\n  }, []);\n\n  // Update filter everytime the user types in the find a user box.\n  const handleInputChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  // Sort users by column\n  const sortBy = (event) => {\n    event.preventDefault();\n    let localUsers;\n    switch (event.target.dataset.column) {\n      case \"firstName\":\n        localUsers = users.sort((a, b) => {\n          if (a.name.first < b.name.first) {\n            return -1;\n          }\n          if (a.name.first > b.name.first) {\n            return 1;\n          }\n          // a must be equal to b\n          return 0;\n        });\n        break;\n      case \"lastName\":\n        localUsers = users.sort((a, b) => {\n          if (a.name.last < b.name.last) {\n            return -1;\n          }\n          if (a.name.last > b.name.last) {\n            return 1;\n          }\n          // a must be equal to b\n          return 0;\n        });\n        break;\n      case \"email\":\n        localUsers = users.sort((a, b) => {\n          if (a.email < b.email) {\n            return -1;\n          }\n          if (a.email > b.email) {\n            return 1;\n          }\n          // a must be equal to b\n          return 0;\n        });\n        break;\n      case \"country\":\n        localUsers = users.sort((a, b) => {\n          if (a.location.country < b.location.country) {\n            return -1;\n          }\n          if (a.location.country > b.location.country) {\n            return 1;\n          }\n          // a must be equal to b\n          return 0;\n        });\n        break;\n      case \"city\":\n        localUsers = users.sort((a, b) => {\n          if (a.location.city < b.location.city) {\n            return -1;\n          }\n          if (a.location.city > b.location.city) {\n            return 1;\n          }\n          // a must be equal to b\n          return 0;\n        });\n        break;\n\n      default:\n        localUsers = users;\n        break;\n    }\n    setUsers([...localUsers]);\n  };\n\n  // Update state when user types in filter field\n  const handleFilterChange = (event) => {\n    setFilter(\"\");\n    setFilterColumn(event.target.dataset.filter);\n  };\n\n  // Filter the users by what's in the filter field\n  const filterBy = (event) => {\n    event.preventDefault();\n    let localUsers;\n    switch (filterColumn) {\n      case \"first name\":\n        localUsers = users.filter((user) => user.name.first === filter);\n        break;\n      case \"last name\":\n        localUsers = users.filter((user) => user.name.last === filter);\n        break;\n      case \"email\":\n        localUsers = users.filter((user) => user.email === filter);\n        break;\n      case \"country\":\n        localUsers = users.filter((user) => user.location.country === filter);\n        break;\n      case \"city\":\n        localUsers = users.filter((user) => user.location.city === filter);\n        break;\n\n      default:\n        break;\n    }\n\n    setUsers([...localUsers]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Employees</p>\n        <FilterBy\n          filterBy={filterBy}\n          handleInputChange={handleInputChange}\n          filterColumn={filterColumn}\n          handleFilterChange={handleFilterChange}\n        />\n        <Table users={users} sortBy={sortBy} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}